# -------------------------------
# GitHub Actions CI Pipeline
# -------------------------------

# "name" is what shows up in the Actions tab
name: CI Pipeline

# "on" defines the trigger events for this workflow
on:
  push:               # Run this workflow when code is pushed
    branches: [ main ]  # Only run on the "main" branch
  pull_request:       # Also run on pull requests targeting main
    branches: [ main ]

# "jobs" defines what tasks this workflow will run
jobs:
  backend-tests:       # Job for backend testing
    runs-on: ubuntu-latest   # The virtual machine to use (Linux, latest Ubuntu)

    steps:
      # Step 1: Checkout code from GitHub so the runner has access to it
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Node.js environment on the runner
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"   # Use Node.js 18 LTS
          cache: 'npm'
          cache-dependency-path: 'Backend/package-lock.json'

      # Step 3: Install backend dependencies
      - name: Install backend dependencies
        run: |
          cd Backend
          npm ci   # Clean install from package-lock.json

      # Step 4: Run backend tests
      - name: Run backend tests
        run: |
          cd Backend
          npm test

  frontend-tests:      # Job for frontend testing (if needed later)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: 'npm'
          cache-dependency-path: 'Frontend/package-lock.json'

      - name: Install frontend dependencies
        run: |
          cd Frontend
          npm ci

      - name: Build frontend
        run: |
          cd Frontend
          npm run build

      # -------------------------------
      # Future additions:
      # -------------------------------
      # - Run linting (e.g., ESLint, Prettier)
      # - Run frontend tests when you add them
      # - Deploy to staging/production
      # - Test on multiple Python versions (matrix build)
      # - Deploy to a server after tests pass
      # - Build Docker images or publish Python packages